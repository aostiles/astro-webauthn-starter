import type { APIRoute } from "astro";
import type { APIContext } from "astro";
import { server } from "@passwordless-id/webauthn";
import { getNonce, saveRegistration } from "../../db";

const origin = import.meta.env.PUBLIC_ORIGIN;

export const post: APIRoute = async ({ request }: APIContext) => {
  const data = await request.json();
  const nonce = await getNonce(request, data.challenge);

  const expected = {
    challenge: nonce, // whatever was randomly generated by the server
    origin: origin,
  };

  try {
    const registrationParsed = await server.verifyRegistration(
      data.registration,
      expected
    );
    // saves a registration request in the database
    await saveRegistration(request, registrationParsed, data.message);
    return new Response(JSON.stringify({ registration: registrationParsed }));
  } catch (error) {
    console.log(error);
    return new Response(JSON.stringify({ error: error }), {
      status: 500,
      headers: {
        "Content-Type": "application/json",
      },
    });
  }
};

// redirect on GET requests. This can happen if the user explicitly navigates to the endpoint.
export const get: APIRoute = async ({ request, redirect }: APIContext) => {
  return redirect("/", 302);
};
